<Activity mc:Ignorable="sap sap2010" x:Class="BoxShare" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_Quarter" Type="InArgument(x:Int32)" />
    <x:Property Name="in_FiscalYear" Type="InArgument(x:String)" />
    <x:Property Name="in_logNotifications" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>546,1668</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>BoxShare_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="BoxShare" sap:VirtualizedContainerService.HintSize="526,1608" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="Arr_MPEGLAFiles" />
      <Variable x:TypeArguments="x:String" Name="str_PatentsPath" />
      <Variable x:TypeArguments="x:String" Name="str_SettlementsPath" />
      <Variable x:TypeArguments="x:Int32" Name="int_ExceptionCount" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Logfile workflow - LOG-MPEG10" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Log\Logfile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-MPEG10</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[in_Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
        <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
        <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[in_LogNotifications]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
        <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
        <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID" />
        <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[in_Config("DB_ConnectionString").tostring]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[Arr_MPEGLAFiles]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_Config("LocalDownloadPath").tostring.Replace("&lt;username&gt;",Environment.UserName))]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;File Count in MPEGLA folder: &quot;+Arr_MPEGLAFiles.Length.tostring]" />
    <Assign DisplayName="Ini excepCount" sap:VirtualizedContainerService.HintSize="484,62" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[int_ExceptionCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each file in MPEGLA local folder" sap:VirtualizedContainerService.HintSize="484,670" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Arr_MPEGLAFiles]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
          </ActivityAction.Argument>
          <TryCatch DisplayName="Try Catch - upload file" sap:VirtualizedContainerService.HintSize="434,531.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <Sequence DisplayName="Upload Files" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="str_FileName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="854,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[str_FileName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Path.GetFileName(file.ToString)]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[in_config(&quot;Run_Environment&quot;).tostring.Trim.ToLower=&quot;prod&quot;]" DisplayName="Check Environment" sap:VirtualizedContainerService.HintSize="854,535.333333333333" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence DisplayName="prd" sap:VirtualizedContainerService.HintSize="376,381.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CreateDirectory ContinueOnError="True" DisplayName="Create Folder - Year" sap:VirtualizedContainerService.HintSize="334,85.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[Path.Combine(in_config(&quot;Prod_BoxLocation_Patents&quot;).tostring.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),in_FiscalYear)]" />
                      <Assign DisplayName="YearPath" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_PatentsPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Path.Combine(in_config("Prod_BoxLocation_Patents").tostring.Replace("&lt;username&gt;",Environment.UserName),in_FiscalYear)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="SettlementsPath" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_4">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_SettlementsPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_config("Prod_BoxLocation_Settlements").tostring.Replace("&lt;username&gt;",Environment.UserName)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Dev" sap:VirtualizedContainerService.HintSize="376,381.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder - Year" sap:VirtualizedContainerService.HintSize="334,85.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[Path.Combine(in_config(&quot;Dev_BoxLocation_Patents&quot;).tostring.Replace(&quot;&lt;username&gt;&quot;,Environment.UserName),in_FiscalYear)]" />
                      <Assign DisplayName="PatentsPath" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_PatentsPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Path.Combine(in_config("Dev_BoxLocation_Patents").tostring.Replace("&lt;username&gt;",Environment.UserName),in_FiscalYear)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="SettlementsPath" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_6">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_SettlementsPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_config("Dev_BoxLocation_Settlements").tostring.Replace("&lt;username&gt;",Environment.UserName)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:CreateDirectory ContinueOnError="True" DisplayName="Create Folder - Patents - AVC" sap:VirtualizedContainerService.HintSize="854,85.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[Path.Combine(str_PatentsPath,&quot;AVC&quot;)]" />
                <ui:CreateDirectory ContinueOnError="True" DisplayName="Create Folder - Patents - MVC" sap:VirtualizedContainerService.HintSize="854,85.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[Path.Combine(str_PatentsPath,&quot;MVC&quot;)]" />
                <ui:CreateDirectory ContinueOnError="True" DisplayName="Create Folder - Patents - VC-1" sap:VirtualizedContainerService.HintSize="854,85.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_7" Path="[Path.Combine(str_PatentsPath,&quot;VC-1&quot;)]" />
                <ui:CreateDirectory ContinueOnError="True" DisplayName="Create Folder - Patents - M4V" sap:VirtualizedContainerService.HintSize="854,85.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_8" Path="[Path.Combine(str_PatentsPath,&quot;M4V&quot;)]" />
                <Switch x:TypeArguments="x:String" DisplayName="Switch - Categorize Files" Expression="[str_FileName.Substring(0,4).Trim]" sap:VirtualizedContainerService.HintSize="854,577.333333333333" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                  <If x:Key="MVC" Condition="[str_FileName.Contains(&quot;Settlement&quot;)]" DisplayName="Check Settlements in FileName - MVC" sap:VirtualizedContainerService.HintSize="814,276" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(str_SettlementsPath,str_FileName.Substring(0,4).Trim.ToUpper,in_FiscalYear+&quot;Q&quot;+in_Quarter.tostring+&quot; &quot;+str_FileName)]" DisplayName="Copy File - MVC" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[file.ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CopyFile>
                    </If.Then>
                    <If.Else>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(str_PatentsPath,str_FileName.Substring(0,4).Trim.ToUpper,in_FiscalYear+&quot;Q&quot;+in_Quarter.tostring+&quot; &quot;+str_FileName)]" DisplayName="Copy File - MVC" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="CopyFile_5" Overwrite="True" Path="[file.ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CopyFile>
                    </If.Else>
                  </If>
                  <If x:Key="AVC" Condition="[str_FileName.Contains(&quot;Settlement&quot;)]" DisplayName="Check Settlements in FileName - AVC" sap:VirtualizedContainerService.HintSize="814,316" sap2010:WorkflowViewState.IdRef="If_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(str_SettlementsPath,str_FileName.Substring(0,4).Trim.ToUpper,in_FiscalYear+&quot;Q&quot;+in_Quarter.tostring+&quot; &quot;+str_FileName)]" DisplayName="Copy File - AVC" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="CopyFile_6" Overwrite="True" Path="[file.ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CopyFile>
                    </If.Then>
                    <If.Else>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(str_PatentsPath,str_FileName.Substring(0,4).Trim.ToUpper,in_FiscalYear+&quot;Q&quot;+in_Quarter.tostring+&quot; &quot;+str_FileName)]" DisplayName="Copy File - AVC" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="CopyFile_7" Overwrite="True" Path="[file.ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CopyFile>
                    </If.Else>
                  </If>
                  <If x:Key="VC-1" Condition="[str_FileName.Contains(&quot;Settlement&quot;)]" DisplayName="Check Settlements in FileName - VC-1" sap:VirtualizedContainerService.HintSize="814,316" sap2010:WorkflowViewState.IdRef="If_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(str_SettlementsPath,str_FileName.Substring(0,4).Trim.ToUpper,in_FiscalYear+&quot;Q&quot;+in_Quarter.tostring+&quot; &quot;+str_FileName)]" DisplayName="Copy File - VC-1" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="CopyFile_8" Overwrite="True" Path="[file.ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CopyFile>
                    </If.Then>
                    <If.Else>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(str_PatentsPath,str_FileName.Substring(0,4).Trim.ToUpper,in_FiscalYear+&quot;Q&quot;+in_Quarter.tostring+&quot; &quot;+str_FileName)]" DisplayName="Copy File - VC-1" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="CopyFile_9" Overwrite="True" Path="[file.ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CopyFile>
                    </If.Else>
                  </If>
                  <If x:Key="M4V" Condition="[str_FileName.Contains(&quot;Settlement&quot;)]" DisplayName="Check Settlements in FileName - M4C" sap:VirtualizedContainerService.HintSize="814,316" sap2010:WorkflowViewState.IdRef="If_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(str_SettlementsPath,str_FileName.Substring(0,4).Trim.ToUpper,in_FiscalYear+&quot;Q&quot;+in_Quarter.tostring+&quot; &quot;+str_FileName)]" DisplayName="Copy File - M4C" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="CopyFile_10" Overwrite="True" Path="[file.ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CopyFile>
                    </If.Then>
                    <If.Else>
                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Path.Combine(str_PAtentsPath,str_FileName.Substring(0,4).Trim.ToUpper,in_FiscalYear+&quot;Q&quot;+in_Quarter.tostring+&quot; &quot;+str_FileName)]" DisplayName="Copy File - M4C" sap:VirtualizedContainerService.HintSize="384,162" sap2010:WorkflowViewState.IdRef="CopyFile_11" Overwrite="True" Path="[file.ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CopyFile>
                    </If.Else>
                  </If>
                </Switch>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,359.333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,288.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Error in processing the file: &quot;+file.ToString+&quot; &quot;+exception.Message]" />
                    <Assign DisplayName="Inc excepCount" sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[int_ExceptionCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[int_ExceptionCount+1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <If Condition="[int_ExceptionCount=Arr_MPEGLAFiles.Length or int_ExceptionCount&lt;&gt;0]" DisplayName="Check ExceptionCount files" sap:VirtualizedContainerService.HintSize="484,214" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Throw DisplayName="Throw - FileProcessing" Exception="[new Exception(&quot;MPEGLA files download and upload process completed with errors in FileUpload.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Then>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Logfile workflow - LOG-MPEG11" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Log\Logfile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-MPEG11</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[in_Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
        <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
        <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[in_LogNotifications]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
        <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
        <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID" />
        <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[in_Config("DB_ConnectionString").tostring]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>